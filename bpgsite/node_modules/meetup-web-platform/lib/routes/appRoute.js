'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.onPreResponse = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _server = require('react-dom/server');

var _server2 = _interopRequireDefault(_server);

var _appRouteHandler = require('./appRouteHandler');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This function provides global error handling when there is a 500 error
 */
var onPreResponse = exports.onPreResponse = {
	method: function method(request, reply) {
		var response = request.response;
		if (!response.isBoom) {
			return reply.continue();
		}
		var error = response;

		var _require = require('redbox-react'),
		    RedBoxError = _require.RedBoxError;

		var errorMarkup = _server2.default.renderToString(_react2.default.createElement(RedBoxError, { error: error }));
		var errorResponse = reply('<!DOCTYPE html><html><body>' + errorMarkup + '</body></html>');
		errorResponse.code(error.output.statusCode);
		return errorResponse;
	}
};

/**
 * Only one wildcard route for all application GET requests - exceptions are
 * described in the routes above
 */
var getApplicationRoute = function getApplicationRoute(renderRequestMap) {
	return {
		method: 'GET',
		path: '/{wild*}',
		config: {
			ext: {
				onPreResponse: onPreResponse
			}
		},
		handler: (0, _appRouteHandler.getAppRouteHandler)(renderRequestMap)
	};
};

exports.default = getApplicationRoute;