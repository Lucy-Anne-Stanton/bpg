'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.getCsrfPlugin = getCsrfPlugin;
exports.getConsoleLogPlugin = getConsoleLogPlugin;
exports.getRequestAuthPlugin = getRequestAuthPlugin;
exports.default = getPlugins;

var _electrodeCsrfJwt = require('electrode-csrf-jwt');

var _electrodeCsrfJwt2 = _interopRequireDefault(_electrodeCsrfJwt);

var _good = require('good');

var _good2 = _interopRequireDefault(_good);

var _goodMeetupTracking = require('./plugins/good-meetup-tracking');

var _goodMeetupTracking2 = _interopRequireDefault(_goodMeetupTracking);

var _requestAuthPlugin = require('./plugins/requestAuthPlugin');

var _requestAuthPlugin2 = _interopRequireDefault(_requestAuthPlugin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Hapi plugins for the dev server
 *
 * @module ServerPlugins
 */

function getCsrfPlugin(secret) {
	var register = function register(server, options, next) {
		server.state('x-csrf-jwt', {
			isSecure: process.env.NODE_ENV === 'production'
		});
		return _electrodeCsrfJwt2.default.register(server, options, next);
	};
	register.attributes = _electrodeCsrfJwt2.default.register.attributes;
	return {
		register: register,
		options: {
			secret: secret
		}
	};
}

/**
 * Provides Hapi process monitoring and console logging
 *
 * @see {@link https://github.com/hapijs/good}
 */
function getConsoleLogPlugin() {
	var logFilter = process.env.LOG_FILTER || { include: [], exclude: ['tracking'] };
	return {
		register: _good2.default,
		options: {
			ops: false, // no ops reporting (for now)
			reporters: {
				console: [{ // filter events with good-squeeze
					module: 'good-squeeze',
					name: 'Squeeze',
					args: [{
						error: logFilter,
						response: logFilter,
						request: logFilter,
						log: logFilter
					}]
				}, { // format with good-console
					module: 'good-console',
					args: [{
						format: 'YYYY-MM-DD HH:mm:ss.SSS'
					}]
				}, 'stdout' // pipe to stdout
				],
				tracking: [{
					module: 'good-squeeze',
					name: 'Squeeze',
					args: [{
						request: 'tracking'
					}]
				}, {
					module: _goodMeetupTracking2.default
				}]
			}
		}
	};
}

/**
 * configure and return the plugin that will allow requests to get anonymous
 * oauth tokens to communicate with the API
 */
function getRequestAuthPlugin(options) {
	return {
		register: _requestAuthPlugin2.default,
		options: options
	};
}

function getPlugins(config) {
	return [getCsrfPlugin(config.CSRF_SECRET), getConsoleLogPlugin(), getRequestAuthPlugin(config)];
}