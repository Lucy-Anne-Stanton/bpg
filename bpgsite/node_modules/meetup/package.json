{
  "_args": [
    [
      {
        "raw": "meetup@0.1.0-SNAPSHOT",
        "scope": null,
        "escapedName": "meetup",
        "name": "meetup",
        "rawSpec": "0.1.0-SNAPSHOT",
        "spec": "0.1.0-SNAPSHOT",
        "type": "version"
      },
      "C:\\bpg\\bpgsite"
    ]
  ],
  "_from": "meetup@0.1.0-SNAPSHOT",
  "_id": "meetup@0.1.0-SNAPSHOT",
  "_inCache": true,
  "_location": "/meetup",
  "_npmUser": {
    "name": "jcurtis",
    "email": "jamocurtis@gmail.com"
  },
  "_npmVersion": "1.2.24",
  "_phantomChildren": {},
  "_requested": {
    "raw": "meetup@0.1.0-SNAPSHOT",
    "scope": null,
    "escapedName": "meetup",
    "name": "meetup",
    "rawSpec": "0.1.0-SNAPSHOT",
    "spec": "0.1.0-SNAPSHOT",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/meetup/-/meetup-0.1.0-SNAPSHOT.tgz",
  "_shasum": "7315c66642ca45e5f0b193eab5a1501413a1c48f",
  "_shrinkwrap": null,
  "_spec": "meetup@0.1.0-SNAPSHOT",
  "_where": "C:\\bpg\\bpgsite",
  "author": {
    "name": "softprops"
  },
  "bugs": {
    "url": "https://github.com/softprops/meetup-js/issues"
  },
  "dependencies": {
    "lodash": ">=0.9.1",
    "oauth": ">=0.8.4"
  },
  "description": "Meetup API node.js client",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "7315c66642ca45e5f0b193eab5a1501413a1c48f",
    "tarball": "https://registry.npmjs.org/meetup/-/meetup-0.1.0-SNAPSHOT.tgz"
  },
  "engines": [
    "node >=0.2.0"
  ],
  "homepage": "https://github.com/softprops/meetup-js",
  "keywords": [
    "meetup",
    "api"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/softprops/meetup-js/raw/master/LICENSE"
    }
  ],
  "main": "./lib/meetup",
  "maintainers": [
    {
      "name": "jcurtis",
      "email": "jamocurtis@gmail.com"
    }
  ],
  "name": "meetup",
  "optionalDependencies": {},
  "readme": "# Meetup js\n\nA node.js interface for the [meetup.com](http://www.meetup.com/) api based roughly on [node-twitter](https://github.com/jdub/node-twitter)\n\n## usage\n\nThis library supports both stream and low-level REST client interfaces.\n\nThe `stream` interface takes a path of the streamed resource you wish to consume and a function callback which will be provided a stream object. You can register a listener on one of the following event names.\n\n* data - emits an single item from the stream\n* error - emits an error throwing in processing of stream\n\nBelow is an example set up\n\n    var Meetup = require(\"meetup\")\n    var mup = new Meetup()\n    mup.stream(\"/2/rsvps\", function(stream){\n      stream\n        .on(\"data\", function(item){\n          console.log(\"got item \" + item)\n        }).on(\"error\", function(e) {\n           console.log(\"error! \" + e)\n        });\n    });    \n\nThe `REST` interface supports a `get` and `post` interface. \nThese REST interfaces require authentication with Meetup before they can be used.\n\n     var Meetup = require(\"meetup\")\n     var mup = new Meetup({\n       clientId:\"YOUR_CLIENT_ID\"\n       , clientSecret:\"YOUR_CLIENT_SECRET\"\n       , redirectUri:\"YOUR_REDIRECT_URI\"\n       })\n\nOnce configured, you can redirect the user-agent to the url returned by `mup.getAuthorizeUrl()`. Once the user authorizes your client their user-agent will be redirected back to YOUR_REDIRECT_URI with a `code` needed to obtain an access token.\n\n    mup.getAccessToken(code, function(err, access, refresh, others) {\n        if (err) {\n           // do something about it\n        } else {\n           // at this point mup is automatically configured with the access token\n           // you are free to start making requests here\n        }\n    })\n    \nOnce you have an access token you can make requests in the form.\n\n    mup.get(\"/2/member/self\", function(err, data){\n      console.log(\"got data \" + data)\n    })\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/softprops/meetup-js.git"
  },
  "version": "0.1.0-SNAPSHOT"
}
